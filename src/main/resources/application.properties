hbase.zookeeperQuorum=localhost
hbase.zookeeperPropertyClientPort=2181
hbase.zookeeperZnodeParent=/hbase-unsecure

#Configurations related to sync up
#Syncup Strategy => supported values -> api, localconfig
config.sync.strategy=api
#Sync up interval in ms
config.sync.interval=3600000

#Sync up api
config.sync.api.recslot=http://localhost:9000/v1/recEngine/recSlots
config.sync.api.recs=http://localhost:9000/v1/recEngine/recs
config.sync.api.bundle=http://localhost:9000/v1/recEngine/bundles
config.sync.api.rule=http://localhost:9000//v1/recEngine/rules
#time in ms
config.sync.api.call.read.timeout=30000
config.sync.api.call.connection.timeout=30000

config.backup.recslots={"recSlots":[{"channel":"TCom","page":"PDP","placeholder":"Grid","ruleIds":[700,701],"recIds":[1000]}]}
config.backup.recs={"recs":[{"id":1000,"name":"Sample Rec Config 1000","type":"REGULAR","matchingCondition":null,"regularConfig":{"bundleId":1},"testConfig":null}]}
config.backup.bundles={"bundles":[{"id":1,"name":"Bundle 1","type":"FLAT","defaultLimit":5,"algorithms":[{"rank":0,"algorithm":{"id":100,"name":"TopTrending","type":"FLAT_ALGO","defaultDisplayText":"Top Trending","customDisplayText":"Top Trending Products"}},{"rank":1,"algorithm":{"id":101,"name":"BestSellers","type":"FLAT_ALGO","defaultDisplayText":"Best Sellers","customDisplayText":null}}],"algoCombineInfo":{"enableCombine":false,"combineDisplayText":null}}]}
config.backup.rules={"rules":[{"id":700,"name":"Test Rule 700","type":"BOOST","isGlobal":false,"matchingCondition":"(department == \\"Shoes\\" || (department == \\"Clothing\\" && brand == \\"Tommy\\"))","actionCondition":"(brand == \\"Nike\\")"},{"id":701,"name":"Test Rule 701","type":"DO_NOT_RECOMMEND","isGlobal":false,"matchingCondition":"(department == \\"Shoes\\" || (department == \\"Clothing\\" && brand == \\"Tommy\\"))","actionCondition":"(brand == \\"ABC\\")"}]}

# Rule translator related attribute type mapping. Change this if certain attributes needs to be converted as double or integer.
ruleTranslator.attributeMapping={price: 'double', rating: 'integer'}

# TODO: Change the file content when DSE team provides the actual file
resource.file.classpath.algoParams=classpath:GetAllAlgoParamsConfigs.json

#Regex to do validate input params
input.param.whitelisted.regex=[a-zA-Z0-9\\-\\_]+
input.param.whitelisted.extra.chars.regex=[a-zA-Z0-9\\-\\_\\|\\,]+